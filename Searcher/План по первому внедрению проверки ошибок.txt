- Поместить новый общий случай в отдельную функцию. Закоментить там ещё не реализованную часть. - ЕСТЬ
- Разместить старые тесты и новый в main, закоментить новый, чтобы тестить старые методы после изменений. - ЕСТЬ

Изменение сигнатуры AddDocument(), FindTopDocuments() и MatchDocument() без изменений результатов программы
- в файле Searcher_tests.cpp везде AddDocument() возвращаемое значение конвертировать в void, чтобы не было предупреждений. - ЕСТЬ
- FindTopDocuments - в обе перегрузки добавить аттрибут [[nondiscard]], чтобы были предупреждения. - ЕСТЬ
- FindTopDocuments - во всех перегрузках изменить возвращаемое значение на bool. В конце обоих временно возвращать true - ЕСТЬ
- FindTopDocuments - во всех перегрузках сделать вторым аргументов ссылку на вектор документов. - ЕСТЬ
- FindTopDocuments - во всех перегрузках изменить логику так, чтобы в неё и входили новые данные. - ЕСТЬ
- в файле Searcher_tests.cpp везде FindTopDocuments() конвертнуть в void - ЕСТЬ
- в файле Searcher_tests.cpp везде FindTopDocuments() изменить логику чтобы возвращаемый вектор документов принимались через аргумент по ссылке. - ЕСТЬ
- Прогнать через старые тесты. Если что-то не так - лечить. - ЕСТЬ
- MatchDocument() - изменить сигнатуру, добавить ссылку result типа нынешнего возвращаемого значения. - ЕСТЬ
- MatchDocument() - изменить возвращаемое значение на bool, временно всегда пусть возвращает true. - ЕСТЬ
- MatchDocument() - Добавить [[nondiscard]] - ЕСТЬ
- MatchDocument() - изменить логику возвращения значения через параметр - ЕСТЬ
- в файле Searcher_tests.cpp везде MatchDocument() конвертнуть в void - ЕСТЬ
- в файле Searcher_tests.cpp везде MatchDocument() изменить логику на получение значения через параметр - ЕСТЬ
- Прогнать через старые тесты. Если что-то не так - лечить. - ЕСТЬ

Изменение логики программы:
- FindTopDocuments() - в шаблонной перегрузке добавить условие, что если входящий запрос не проходит проверку методом IsNotContainSpecSymbols() - функция возвращает false и возвращает пустой вектор доков - ВРОДЕ НЕ НУЖНО
- Написать тест для FindTopDocuments() в виде отдельной функции TestFindDocsFilterSpecSymbols(), проверяющую возвращаемое значение FindTopDocuments() и её содержимое после применения. Поместить в общие старые тесты. - ВРОДЕ НЕ НУЖНО ИЛИ ПОТОМ
- Тестить. Если что не так - лечить. - ВРОДЕ НЕ НУЖНО ИЛИ ПОТОМ
- Написать функцию IsContainDoubleMinus(char) возвращающую true, если после символа - следует такой же минус - ЕСТЬ
- Написать функцию TestsAdditiveFunctions(), в которую закинуть тест на IsNotContainSpecSymbols() и далее закинуть следующие тесты на универсальные дополнительные функции - ЕСТЬ
- Написать Тест на IsContainDoubleMinus(), закинуть в TestsAdditiveFunctions() - ЕСТЬ
- Прогнать TestsAdditiveFunctions(), лечить если надо - ЕСТЬ
- Переделать IsNotCharSpecSymbol() в IsCharSpecSymbol(), поправить логику на противположную. - ЕСТЬ
- Поправить логику в IsNotContainSpecSymbols() - ЕСТЬ
- Прогнать адитивные тесты. Лечить если надо. - ЕСТЬ
- Написать функцию IsEmptyMinus(char), возвращающую true, если после минуса нет слов (то есть пробел или \0). - ЕСТЬ
- Написать Тест на IsEmptyMinus(), закинуть в TestsAdditiveFunctions()
- Прогнать TestsAdditiveFunctions(), лечить если надо
- Написать приватный метод IsClearRawQuery(string), использовать в нем IsEmptyMinus(), IsContainDoubleMinus() и IsCharSpecSymbol(), пройтис циклом по строке этими методами и если один из методов - true, IsClearRawQuery - возвращает false
- имплементировать IsClearRawQuery() в шаблонный FindTopDocuments. Если IsClearRawQuery() возвращает false, это же возвращает FindTopDocuments и прерывает всю логику по пополнению доков.
- Написать тест TestCheckClearRawFindDocs(), проверяющий метод IsClearRawQuery(). Поместить его в старые тесты.
- Прогнать старые тесты (можно после адитивных). Если надо лечить - лечить.
-  имплементировать IsClearRawQuery() в шаблонный MatchDocument. Если IsClearRawQuery() возвращает false, это же возвращает MatchDocument и прерывает всю логику по возвращению слов, оставляя result пустым.
- Написать тест TestCheckClearRawMatchDocs(), проверяющий метод IsClearRawQuery(). Поместить его в старые тесты.
- Прогнать старые тесты (можно после адитивных). Если надо лечить - лечить.

Тест общего случая:
- Вернуть тест общего случая из практикума и прогнать его. Дальше как пойдет...
